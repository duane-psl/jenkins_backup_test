<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>ApacheCassandra-2.2.5_ubuntu-16.04_s390x</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>dc2_ub16.04_4096</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 13 * * 5</spec>
    </hudson.triggers.TimerTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H 13 * * 5</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>/bin/bash

# Install the dependencies
sudo apt-get update
sudo apt-get install -y git tar g++ make automake autoconf libtool  wget patch libx11-dev libxt-dev openjdk-8-jre openjdk-8-jdk pkg-config texinfo  locales-all

# Set environment variables
unset JAVA_TOOL_OPTIONS
export LANG=&quot;en_US.UTF-8&quot;
export JAVA_TOOL_OPTIONS=&quot;-Dfile.encoding=UTF8&quot;
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-s390x


rm -rf source_root &amp;&amp; mkdir source_root &amp;&amp; cd source_root
SRCRT=$(pwd)


#Install Ant
wget http://archive.apache.org/dist/ant/binaries/apache-ant-1.9.2-bin.tar.gz &amp;&amp; tar -xvf apache-ant-1.9.2-bin.tar.gz &amp;&amp; \
cd apache-ant-1.9.2 &amp;&amp; export ANT_HOME=`pwd` &amp;&amp; cd bin &amp;&amp; export PATH=$PATH:`pwd`


#Install the latest version of Snappy-Java
cd $SRCRT &amp;&amp; git clone --branch develop https://github.com/xerial/snappy-java.git &amp;&amp; cd snappy-java &amp;&amp; \
make IBM_JDK_7=1 USE_GIT=1 GIT_SNAPPY_BRANCH=1.1.4 GIT_REPO_URL=https://github.com/google/snappy.git



#Build and install Apache Cassandra 2.2.5
cd $SRCRT &amp;&amp; git clone https://github.com/apache/cassandra.git &amp;&amp; cd cassandra &amp;&amp; git checkout cassandra-2.2.3
rm $SRCRT/cassandra/lib/snappy-java-1.1.1.7.jar
cp $SRCRT/snappy-java/target/snappy-java-1.1.3-SNAPSHOT.jar $SRCRT/cassandra/lib/snappy-java-1.1.3.jar



cd $SRCRT &amp;&amp; git clone https://github.com/java-native-access/jna.git &amp;&amp; cd jna &amp;&amp; git checkout 4.0 &amp;&amp; ant
cp $SRCRT/jna/build/jna.jar  $SRCRT/cassandra/lib/jna.jar &amp;&amp; rm $SRCRT/cassandra/lib/jna-4.0.0.jar

cd $SRCRT/cassandra
sed &apos;s/240000/24000000/&apos; build.xml
sed &apos;s/600000/60000000/&apos; build.xml

echo &quot;key_cache_size_in_mb: 16&quot; &gt;&gt; ./test/conf/cassandra.yaml

cd $SRCRT/cassandra &amp;&amp; ant 


#Run the unit tests
#cd $SRCRT/cassandra/
#ant test</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.24">
        <script>import jenkins.model.Jenkins

def x=manager.envVars[&apos;NODE_NAME&apos;]
Jenkins.instance.slaves.each {
    if(it.name==x){
it.getComputer().doDoDelete()
    }
}
</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>#loz-jenkins-build, @gsalgaon</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>