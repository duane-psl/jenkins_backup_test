<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>dockercloud_sles11_ibm-8</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 13 * * 4</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>sudo zypper update -y 
export JAVA_HOME=/opt/ibm/java-s390x-80 
export PATH=$JAVA_HOME/bin:$PATH
java -version

sudo zypper update -y
sudo zypper install -y wget tar make perl gcc gcc-c++ libopenssl-devel libssh-devel ncurses-devel unixODBC unixODBC-devel
wget http://www.erlang.org/download/otp_src_20.0.tar.gz

tar zxf otp_src_20.0.tar.gz
cd otp_src_20.0
export ERL_TOP=$(pwd)
./configure --prefix=/usr
make
make release_tests
cd release/tests/test_server
$ERL_TOP/bin/erl &lt;&lt; EOF
ts:install().
ts:run():
ts:smoke_test([batch]).
init:stop().
EOF
cd ../../..
sudo make install


cd ~
#this will just display major version as 20 minor version wont be printed
erl -eval &apos;erlang:display(erlang:system_info(otp_release)), halt().&apos;  -noshell|tee output.txt

ps -ef

sleep 180s

kill -9 $(ps aux | grep &apos;epmd&apos; | awk &apos;{print $2}&apos;)| awk &apos;{print $2}&apos;

#verification of output 
string=&apos;20&apos;;
if grep -q $string  &quot;output.txt&quot;; then
   exit 0
else
  exit 1
fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.24">
        <script>import jenkins.model.Jenkins

def x=manager.envVars[&apos;NODE_NAME&apos;]
Jenkins.instance.slaves.each {
if(it.name==x){
it.getComputer().doDoDelete()
}
}</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>#loz-jenkins-build, @narang</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>