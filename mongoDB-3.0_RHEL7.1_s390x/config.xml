<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.0.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/linux-on-ibm-z/mongo</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>v3.0-s390</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>mongo</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <assignedNode>ketan_mongo3.0_rhe7.1</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 1 * * 4
</spec>
    </hudson.triggers.TimerTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H 1 * * 4
</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Install scons
sudo yum install -y git subversion make gcc-c++ tar wget patch
cd /home/test/
sudo wget http://downloads.sourceforge.net/project/scons/scons/2.3.4/scons-2.3.4-1.noarch.rpm
sudo rpm -i scons-2.3.4-1.noarch.rpm
# V8 build and install
mkdir source
cd source
git clone https://github.com/ibmruntimes/v8z
cd v8z
git checkout 3.14-s390
make dependencies
make s390x -j4
make s390x -j4 library=shared
sudo cp -vR include/* /usr/include/
sudo chmod -f 644 /usr/include/v8*.h  
sudo cp -v out/s390x.release/lib.target/lib*.so /usr/local/lib64/
sudo chmod -f 755 /usr/local/lib64/libv8.so 
sudo cp -v out/s390x.release/obj.target/tools/gyp/lib*.a /usr/local/lib64/
sudo chmod -f 644 /usr/local/lib64/libv8*.a /usr/local/lib64/libpreparser_lib.a #/usr/local/lib64/libicu*.a
sudo ldconfig -v
# Building MongoDB
cd /home/test/source
git clone https://github.com/linux-on-ibm-z/mongo mongo
cd mongo
git checkout v3.0-s390
cp /home/test/source/v8z/include/*.h /home/test/source/mongo/src/
sudo scons --opt --use-system-v8 --allocator=system all



#sudo yum install -y wget tar make flex subversion gcc gcc-c++ binutils-devel bzip2
#cd /home/test/source
#svn co svn://gcc.gnu.org/svn/gcc/trunk@223813 gcc_srcDir
#cd gcc_srcDir
#./contrib/download_prerequisites
#mkdir -p /home/test/source/gcc_buildDir/build
#cd /home/test/source/gcc_buildDir/build

#../../gcc_srcDir/configure --prefix=&quot;/opt/gccgo&quot; --enable-shared --with-system-zlib --enable-threads=posix --disable-multilib --enable-__cxa_atexit --enable-checking --enable-gnu-indirect-function --enable-languages=&quot;c,c++,go&quot; --disable-bootstrap
#make all
#sudo make install
#export PATH=/opt/gccgo/bin:$PATH
#export LD_LIBRARY_PATH=/opt/gccgo/lib64:$LD_LIBRARY_PATH
#sudo sh -c &quot;echo &apos;/opt/gccgo/lib64&apos; &gt;&gt; /etc/ld.so.conf.d/gccgo.conf&quot;
#cd /home/test/source
# Mongo Tools

#git clone https://github.com/mongodb/mongo-tools
#cd /home/test/source/mongo-tools
#git checkout r3.0.4
#build_c.sh is in /scratch....
#cp /home/test/work/Mongo_3.0_rh7_s390x/build_c.sh  .
#ls -l | grep &quot;build_c.sh&quot;
#chmod +777 build_c.sh
#ls -l | grep &quot;build_c.sh&quot;
#diff â€“u build.sh build_c.sh &gt; build_p.sh
#patch &lt; build_p.sh

#sed -i &quot;s/-ldflags/\-gccgoflags \&apos;-static-libgo\&apos; -ldflags/&quot; build.sh

#./build.sh
#cd /home/test/source/
#git clone git://github.com/mongodb/mongo-python-driver.git pymongo
#cd pymongo
#sudo python setup.py install
#cd /home/test/source/mongo
#set +e
#sudo scons --opt --use-system-v8 --allocator=system smokeCppUnittests &gt; smokeCppUnittests.log
#sed &apos;/^         Date :/ d&apos; &lt; smokeCppUnittests.log &gt; smokeCppUnittests.log.trim
#sed &apos;s/^2016.........................//&apos; &lt; smokeCppUnittests.log.trim &gt; smokeCppUnittests.log.trim2
#sed &apos;/^.* ms/ d&apos; &lt; smokeCppUnittests.log.trim2 &gt; smokeCppUnittests.log.trim3
#sed  &apos;/ time secs:/s/.\{18\}$//&apos; &lt; smokeCppUnittests.log.trim3 &gt; smokeCppUnittests.log.trim4
#sed  &apos;/ locks took:/s/:.*$//&apos; &lt; smokeCppUnittests.log.trim4 &gt; smokeCppUnittests.log.trim5
#sed  &apos;/ seconds$/d&apos; &lt; smokeCppUnittests.log.trim5 &gt; smokeCppUnittests.log.trim6
#cp /home/test/work/Mongo_3.0_rh7_s390x/smokeCppUnittests_original.log /home/test/
#chmod 777 /home/test/smokeCppUnittests_original.log
#cmp /home/test/smokeCppUnittests_original.log smokeCppUnittests.log.trim6 || exit 1

 

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.24">
        <script>import jenkins.model.Jenkins

def x=manager.envVars[&apos;NODE_NAME&apos;]
Jenkins.instance.slaves.each {
if(it.name==x){
it.getComputer().doDoDelete()
}
}</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>#loz-jenkins-build,@duaned</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>