<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Install Dependencies
sudo apt-get update
sudo apt-get install -y tar wget git build-essential python-dev openjdk-8-jdk libcurl4-nss-dev libsasl2-dev libsasl2-modules maven libapr1-dev libsvn-dev zlib1g-dev libssl-dev autoconf automake libtool bzip2

# Set environment variables
export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-s390x/
export PATH=/usr/lib/jvm/java-1.8.0-openjdk-s390x/bin:$PATH

# Clone repo and apply patches
git clone https://github.com/apache/mesos
cd mesos/
git checkout 1.3.1
sudo cp 3rdparty/stout/include/stout/jsonify.hpp 3rdparty/stout/include/stout/jsonify.hpp.orig
sed -i &apos;17s/.*/#include &lt;locale.h&gt;/&apos; 3rdparty/stout/include/stout/jsonify.hpp
#diff -u 3rdparty/stout/include/stout/jsonify.hpp.orig 3rdparty/stout/include/stout/jsonify.hpp


# Configure and build
./bootstrap
mkdir build
sed -i &apos;134i \          \&lt;maxmemory&gt;512m&lt;/maxmemory&gt;&apos; src/java/mesos.pom.in
cd build
../configure
make
# Install (Optional).
sudo make install

# Start Master
nohup sudo ./bin/mesos-master.sh --ip=127.0.0.1 --work_dir=/var/lib/mesos &amp;

sleep 100

# Verification
wget http://127.0.0.1:5050</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.24">
        <script>import jenkins.model.Jenkins

def x=manager.envVars[&apos;NODE_NAME&apos;]
Jenkins.instance.slaves.each {
    if(it.name==x){
it.getComputer().doDoDelete()
    }
}
</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>#loz-jenkins-build,@vkadam</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>