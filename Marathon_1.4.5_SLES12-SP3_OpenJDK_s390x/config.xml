<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>dockercloud_sles12-sp3_8192</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 13 * * 0</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>sudo zypper up -y
# Install dependencies
sudo zypper install -y git wget tar java-1_8_0-openjdk-devel patch which subversion-devel 
#subversion-devel  is dependency of mesos

# Set environment variables
export JAVA_HOME=/usr/lib64/jvm/java-1.8.0
export PATH=/usr/lib64/jvm/java-1.8.0/bin:$PATH
export SBT_OPTS=&quot;-Xmx4g&quot;

# Install sbt 
wget https://dl.bintray.com/sbt/native-packages/sbt/0.13.11/sbt-0.13.11.tgz
tar -zxvf sbt-0.13.11.tgz
export WRKDIR=`pwd`
export PATH=$WRKDIR/sbt/bin:$PATH

export MOUNT_DIR=/home/test/work/Mesos_for_Marathon/SLES12_SP3/OPEN
ls $MOUNT_DIR
#Copy all the required binaries.
sudo cp $MOUNT_DIR/libmesos-1.3.1.so /usr/local/lib/
sudo cp $MOUNT_DIR/libmesos.la /usr/local/lib/
sudo cp $MOUNT_DIR/libmesos.so /usr/local/lib/
sudo cp -r $MOUNT_DIR/mesos /usr/local/lib/

# Install Marathon
git clone https://github.com/mesosphere/marathon.git
cd marathon
git checkout v1.4.5
sbt assembly
./bin/build-distribution 

# Start Zookeper service
cd $WRKDIR
git clone https://github.com/apache/mesos
cd mesos/
git checkout 1.3.1
cd 3rdparty/
tar zxf zookeeper-3.4.8.tar.gz
ls
cd zookeeper-3.4.8
sudo cp conf/zoo_sample.cfg conf/zoo.cfg
sudo env PATH=$PATH ./bin/zkServer.sh start 
sleep 20
cd $WRKDIR

# Start Marathon service
cd marathon
sudo env PATH=$PATH nohup ./bin/start --master local --zk zk://127.0.0.1:2181/marathon &amp;
sleep 100
wget http://127.0.0.1:8080

sleep 60s
ps -aef 

pgrep -d&quot; &quot; -f &quot;marathon&quot; | sudo xargs kill;

sleep 20s
ps -aef </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.24">
        <script>import jenkins.model.Jenkins

def x=manager.envVars[&apos;NODE_NAME&apos;]
Jenkins.instance.slaves.each {
    if(it.name==x){
it.getComputer().doDoDelete()
    }
}
</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>#loz-jenkins-build,@preeti.khorjuvenkar</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>